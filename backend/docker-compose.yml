version: '3.8'

name: violence-detection

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: violence-detection-db
    environment:
      POSTGRES_DB: violence_detection
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  # Redis Cache & Message Queue
  redis:
    image: redis:7-alpine
    container_name: violence-detection-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: violence-detection-backend
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@postgres:5432/violence_detection
      
      # Redis
      REDIS_URL: redis://redis:6379/0
      
      # Application
      APP_ENV: development
      DEBUG: "true"
      API_V1_PREFIX: /api/v1
      
      # Server
      HOST: 0.0.0.0
      PORT: 8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  backend-network:
    driver: bridge
